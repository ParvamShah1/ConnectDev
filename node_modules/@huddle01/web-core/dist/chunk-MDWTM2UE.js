import {
  esm_exports,
  init_esm,
  require_rtp_parameters_pb
} from "./chunk-6SZRNOKT.js";
import {
  __commonJS,
  __toCommonJS,
  __toESM
} from "./chunk-EK4TMKVS.js";

// ../protoc/dist/rtc/sctp_capabilities_pb.js
var require_sctp_capabilities_pb = __commonJS({
  "../protoc/dist/rtc/sctp_capabilities_pb.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProtoSctpCapabilities = exports.ProtoNumSctpStreams = void 0;
    var protobuf_1 = (init_esm(), __toCommonJS(esm_exports));
    var ProtoNumSctpStreams = class _ProtoNumSctpStreams extends protobuf_1.Message {
      constructor(data) {
        super();
        this.OS = 0;
        this.MIS = 0;
        protobuf_1.proto3.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ProtoNumSctpStreams().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ProtoNumSctpStreams().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ProtoNumSctpStreams().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto3.util.equals(_ProtoNumSctpStreams, a, b);
      }
    };
    exports.ProtoNumSctpStreams = ProtoNumSctpStreams;
    ProtoNumSctpStreams.runtime = protobuf_1.proto3;
    ProtoNumSctpStreams.typeName = "ProtoNumSctpStreams";
    ProtoNumSctpStreams.fields = protobuf_1.proto3.util.newFieldList(() => [
      { no: 1, name: "OS", kind: "scalar", T: 5 },
      { no: 2, name: "MIS", kind: "scalar", T: 5 }
    ]);
    var ProtoSctpCapabilities = class _ProtoSctpCapabilities extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ProtoSctpCapabilities().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ProtoSctpCapabilities().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ProtoSctpCapabilities().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto3.util.equals(_ProtoSctpCapabilities, a, b);
      }
    };
    exports.ProtoSctpCapabilities = ProtoSctpCapabilities;
    ProtoSctpCapabilities.runtime = protobuf_1.proto3;
    ProtoSctpCapabilities.typeName = "ProtoSctpCapabilities";
    ProtoSctpCapabilities.fields = protobuf_1.proto3.util.newFieldList(() => [
      { no: 1, name: "numStreams", kind: "message", T: ProtoNumSctpStreams }
    ]);
  }
});

// ../protoc/dist/rtc/sdp_info_pb.js
var require_sdp_info_pb = __commonJS({
  "../protoc/dist/rtc/sdp_info_pb.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProtoTransportSDPInfo = exports.ProtoSctpParameters = exports.ProtoDtlsParameters = exports.ProtoIceCandidates = exports.ProtoIceParameters = exports.ProtoDtlsFingerPrints = void 0;
    var protobuf_1 = (init_esm(), __toCommonJS(esm_exports));
    var ProtoDtlsFingerPrints = class _ProtoDtlsFingerPrints extends protobuf_1.Message {
      constructor(data) {
        super();
        this.algorithm = "";
        this.value = "";
        protobuf_1.proto3.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ProtoDtlsFingerPrints().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ProtoDtlsFingerPrints().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ProtoDtlsFingerPrints().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto3.util.equals(_ProtoDtlsFingerPrints, a, b);
      }
    };
    exports.ProtoDtlsFingerPrints = ProtoDtlsFingerPrints;
    ProtoDtlsFingerPrints.runtime = protobuf_1.proto3;
    ProtoDtlsFingerPrints.typeName = "ProtoDtlsFingerPrints";
    ProtoDtlsFingerPrints.fields = protobuf_1.proto3.util.newFieldList(() => [
      { no: 1, name: "algorithm", kind: "scalar", T: 9 },
      { no: 2, name: "value", kind: "scalar", T: 9 }
    ]);
    var ProtoIceParameters = class _ProtoIceParameters extends protobuf_1.Message {
      constructor(data) {
        super();
        this.usernameFragment = "";
        this.password = "";
        this.iceLite = false;
        protobuf_1.proto3.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ProtoIceParameters().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ProtoIceParameters().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ProtoIceParameters().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto3.util.equals(_ProtoIceParameters, a, b);
      }
    };
    exports.ProtoIceParameters = ProtoIceParameters;
    ProtoIceParameters.runtime = protobuf_1.proto3;
    ProtoIceParameters.typeName = "ProtoIceParameters";
    ProtoIceParameters.fields = protobuf_1.proto3.util.newFieldList(() => [
      { no: 1, name: "usernameFragment", kind: "scalar", T: 9 },
      { no: 2, name: "password", kind: "scalar", T: 9 },
      { no: 3, name: "iceLite", kind: "scalar", T: 8 }
    ]);
    var ProtoIceCandidates = class _ProtoIceCandidates extends protobuf_1.Message {
      constructor(data) {
        super();
        this.foundation = "";
        this.priority = 0;
        this.ip = "";
        this.port = 0;
        this.type = "";
        this.protocol = "";
        this.tcpType = "";
        protobuf_1.proto3.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ProtoIceCandidates().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ProtoIceCandidates().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ProtoIceCandidates().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto3.util.equals(_ProtoIceCandidates, a, b);
      }
    };
    exports.ProtoIceCandidates = ProtoIceCandidates;
    ProtoIceCandidates.runtime = protobuf_1.proto3;
    ProtoIceCandidates.typeName = "ProtoIceCandidates";
    ProtoIceCandidates.fields = protobuf_1.proto3.util.newFieldList(() => [
      { no: 1, name: "foundation", kind: "scalar", T: 9 },
      { no: 2, name: "priority", kind: "scalar", T: 5 },
      { no: 3, name: "ip", kind: "scalar", T: 9 },
      { no: 4, name: "port", kind: "scalar", T: 5 },
      { no: 5, name: "type", kind: "scalar", T: 9 },
      { no: 6, name: "protocol", kind: "scalar", T: 9 },
      { no: 7, name: "tcpType", kind: "scalar", T: 9 }
    ]);
    var ProtoDtlsParameters = class _ProtoDtlsParameters extends protobuf_1.Message {
      constructor(data) {
        super();
        this.role = "";
        this.fingerprints = [];
        protobuf_1.proto3.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ProtoDtlsParameters().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ProtoDtlsParameters().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ProtoDtlsParameters().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto3.util.equals(_ProtoDtlsParameters, a, b);
      }
    };
    exports.ProtoDtlsParameters = ProtoDtlsParameters;
    ProtoDtlsParameters.runtime = protobuf_1.proto3;
    ProtoDtlsParameters.typeName = "ProtoDtlsParameters";
    ProtoDtlsParameters.fields = protobuf_1.proto3.util.newFieldList(() => [
      { no: 1, name: "role", kind: "scalar", T: 9 },
      { no: 2, name: "fingerprints", kind: "message", T: ProtoDtlsFingerPrints, repeated: true }
    ]);
    var ProtoSctpParameters = class _ProtoSctpParameters extends protobuf_1.Message {
      constructor(data) {
        super();
        this.port = 0;
        this.OS = 0;
        this.MIS = 0;
        this.maxMessageSize = 0;
        protobuf_1.proto3.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ProtoSctpParameters().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ProtoSctpParameters().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ProtoSctpParameters().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto3.util.equals(_ProtoSctpParameters, a, b);
      }
    };
    exports.ProtoSctpParameters = ProtoSctpParameters;
    ProtoSctpParameters.runtime = protobuf_1.proto3;
    ProtoSctpParameters.typeName = "ProtoSctpParameters";
    ProtoSctpParameters.fields = protobuf_1.proto3.util.newFieldList(() => [
      { no: 1, name: "port", kind: "scalar", T: 5 },
      { no: 2, name: "OS", kind: "scalar", T: 5 },
      { no: 3, name: "MIS", kind: "scalar", T: 5 },
      { no: 4, name: "maxMessageSize", kind: "scalar", T: 5 }
    ]);
    var ProtoTransportSDPInfo = class _ProtoTransportSDPInfo extends protobuf_1.Message {
      constructor(data) {
        super();
        this.id = "";
        this.iceCandidates = [];
        protobuf_1.proto3.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ProtoTransportSDPInfo().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ProtoTransportSDPInfo().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ProtoTransportSDPInfo().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto3.util.equals(_ProtoTransportSDPInfo, a, b);
      }
    };
    exports.ProtoTransportSDPInfo = ProtoTransportSDPInfo;
    ProtoTransportSDPInfo.runtime = protobuf_1.proto3;
    ProtoTransportSDPInfo.typeName = "ProtoTransportSDPInfo";
    ProtoTransportSDPInfo.fields = protobuf_1.proto3.util.newFieldList(() => [
      { no: 1, name: "id", kind: "scalar", T: 9 },
      { no: 2, name: "iceCandidates", kind: "message", T: ProtoIceCandidates, repeated: true },
      { no: 3, name: "iceParameters", kind: "message", T: ProtoIceParameters },
      { no: 4, name: "dtlsParameters", kind: "message", T: ProtoDtlsParameters },
      { no: 5, name: "sctpParameters", kind: "message", T: ProtoSctpParameters }
    ]);
  }
});

// ../protoc/dist/client/app_data_pb.js
var require_app_data_pb = __commonJS({
  "../protoc/dist/client/app_data_pb.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AppData = exports.Value = void 0;
    var protobuf_1 = (init_esm(), __toCommonJS(esm_exports));
    var Value = class _Value extends protobuf_1.Message {
      constructor(data) {
        super();
        this.valueType = { case: void 0 };
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _Value().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _Value().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _Value().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_Value, a, b);
      }
    };
    exports.Value = Value;
    Value.runtime = protobuf_1.proto2;
    Value.typeName = "Value";
    Value.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "string_value", kind: "scalar", T: 9, oneof: "value_type" },
      { no: 2, name: "int_value", kind: "scalar", T: 5, oneof: "value_type" },
      { no: 3, name: "float_value", kind: "scalar", T: 2, oneof: "value_type" }
    ]);
    var AppData = class _AppData extends protobuf_1.Message {
      constructor(data) {
        super();
        this.appData = {};
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _AppData().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _AppData().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _AppData().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_AppData, a, b);
      }
    };
    exports.AppData = AppData;
    AppData.runtime = protobuf_1.proto2;
    AppData.typeName = "AppData";
    AppData.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "appData", kind: "map", K: 9, V: { kind: "message", T: Value } }
    ]);
  }
});

// ../protoc/dist/rtc/sctp_stream_parameters_pb.js
var require_sctp_stream_parameters_pb = __commonJS({
  "../protoc/dist/rtc/sctp_stream_parameters_pb.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProtoSctpStreamParameters = void 0;
    var protobuf_1 = (init_esm(), __toCommonJS(esm_exports));
    var ProtoSctpStreamParameters = class _ProtoSctpStreamParameters extends protobuf_1.Message {
      constructor(data) {
        super();
        this.streamId = 0;
        this.ordered = false;
        this.maxPacketLifeTime = 0;
        this.maxRetransmits = 0;
        protobuf_1.proto3.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ProtoSctpStreamParameters().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ProtoSctpStreamParameters().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ProtoSctpStreamParameters().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto3.util.equals(_ProtoSctpStreamParameters, a, b);
      }
    };
    exports.ProtoSctpStreamParameters = ProtoSctpStreamParameters;
    ProtoSctpStreamParameters.runtime = protobuf_1.proto3;
    ProtoSctpStreamParameters.typeName = "ProtoSctpStreamParameters";
    ProtoSctpStreamParameters.fields = protobuf_1.proto3.util.newFieldList(() => [
      { no: 1, name: "streamId", kind: "scalar", T: 5 },
      { no: 2, name: "ordered", kind: "scalar", T: 8 },
      { no: 3, name: "maxPacketLifeTime", kind: "scalar", T: 5 },
      { no: 4, name: "maxRetransmits", kind: "scalar", T: 5 }
    ]);
  }
});

// ../protoc/dist/client/room_control_pb.js
var require_room_control_pb = __commonJS({
  "../protoc/dist/client/room_control_pb.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProduceSourcesControl = exports.RoomControlType = exports.ProduceSources = void 0;
    var protobuf_1 = (init_esm(), __toCommonJS(esm_exports));
    var ProduceSources = class _ProduceSources extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ProduceSources().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ProduceSources().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ProduceSources().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_ProduceSources, a, b);
      }
    };
    exports.ProduceSources = ProduceSources;
    ProduceSources.runtime = protobuf_1.proto2;
    ProduceSources.typeName = "ProduceSources";
    ProduceSources.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "mic", kind: "scalar", T: 8 },
      { no: 2, name: "cam", kind: "scalar", T: 8 },
      { no: 3, name: "screen", kind: "scalar", T: 8 }
    ]);
    var RoomControlType = class _RoomControlType extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _RoomControlType().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _RoomControlType().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _RoomControlType().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_RoomControlType, a, b);
      }
    };
    exports.RoomControlType = RoomControlType;
    RoomControlType.runtime = protobuf_1.proto2;
    RoomControlType.typeName = "RoomControlType";
    RoomControlType.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "type", kind: "scalar", T: 9 },
      { no: 5, name: "value", kind: "scalar", T: 8 }
    ]);
    var ProduceSourcesControl = class _ProduceSourcesControl extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ProduceSourcesControl().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ProduceSourcesControl().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ProduceSourcesControl().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_ProduceSourcesControl, a, b);
      }
    };
    exports.ProduceSourcesControl = ProduceSourcesControl;
    ProduceSourcesControl.runtime = protobuf_1.proto2;
    ProduceSourcesControl.typeName = "ProduceSourcesControl";
    ProduceSourcesControl.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "type", kind: "scalar", T: 9 },
      { no: 2, name: "value", kind: "message", T: ProduceSources }
    ]);
  }
});

// ../protoc/dist/client/permissions_pb.js
var require_permissions_pb = __commonJS({
  "../protoc/dist/client/permissions_pb.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Permissions_ProduceSources = exports.Permissions = void 0;
    var protobuf_1 = (init_esm(), __toCommonJS(esm_exports));
    var Permissions = class _Permissions extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _Permissions().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _Permissions().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _Permissions().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_Permissions, a, b);
      }
    };
    exports.Permissions = Permissions;
    Permissions.runtime = protobuf_1.proto2;
    Permissions.typeName = "Permissions";
    Permissions.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "admin", kind: "scalar", T: 8 },
      { no: 2, name: "canConsume", kind: "scalar", T: 8 },
      { no: 3, name: "canProduce", kind: "scalar", T: 8 },
      { no: 4, name: "canProduceSources", kind: "message", T: Permissions_ProduceSources },
      { no: 5, name: "canSendData", kind: "scalar", T: 8 },
      { no: 6, name: "canRecvData", kind: "scalar", T: 8 },
      { no: 7, name: "canUpdateMetadata", kind: "scalar", T: 8 }
    ]);
    var Permissions_ProduceSources = class _Permissions_ProduceSources extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _Permissions_ProduceSources().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _Permissions_ProduceSources().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _Permissions_ProduceSources().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_Permissions_ProduceSources, a, b);
      }
    };
    exports.Permissions_ProduceSources = Permissions_ProduceSources;
    Permissions_ProduceSources.runtime = protobuf_1.proto2;
    Permissions_ProduceSources.typeName = "Permissions.ProduceSources";
    Permissions_ProduceSources.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "cam", kind: "scalar", T: 8 },
      { no: 2, name: "mic", kind: "scalar", T: 8 },
      { no: 3, name: "screen", kind: "scalar", T: 8 }
    ]);
  }
});

// ../protoc/dist/client/request_pb.js
var require_request_pb = __commonJS({
  "../protoc/dist/client/request_pb.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Request = exports.CloseRoom = exports.KickPeer = exports.DenyLobbyPeer = exports.AcceptLobbyPeer = exports.CloseStreamOfLabel = exports.UpdateRoomMetadata = exports.UpdatePeerMetadata = exports.UpdatePeerRole = exports.ActivateSpeakerNotification = exports.UpdatePeerPermission = exports.UpdateRoomControls = exports.SendData = exports.RestartTransportIce = exports.SyncMeetingState = exports.ResumeConsumer = exports.CloseConsumer = exports.CloseProducer = exports.Consume = exports.ProduceData = exports.Produce = exports.CreateDataConsumer = exports.ConnectTransport = exports.CreateTransport = exports.ConnectRoom = exports.TestEvent = void 0;
    var protobuf_1 = (init_esm(), __toCommonJS(esm_exports));
    var sctp_capabilities_pb_js_1 = require_sctp_capabilities_pb();
    var sdp_info_pb_js_1 = require_sdp_info_pb();
    var rtp_parameters_pb_js_1 = require_rtp_parameters_pb();
    var app_data_pb_js_1 = require_app_data_pb();
    var sctp_stream_parameters_pb_js_1 = require_sctp_stream_parameters_pb();
    var room_control_pb_js_1 = require_room_control_pb();
    var permissions_pb_js_1 = require_permissions_pb();
    var TestEvent = class _TestEvent extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _TestEvent().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _TestEvent().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _TestEvent().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_TestEvent, a, b);
      }
    };
    exports.TestEvent = TestEvent;
    TestEvent.runtime = protobuf_1.proto2;
    TestEvent.typeName = "TestEvent";
    TestEvent.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "name", kind: "scalar", T: 9 },
      { no: 2, name: "payload", kind: "scalar", T: 9 },
      { no: 3, name: "from", kind: "scalar", T: 9, opt: true },
      { no: 4, name: "to", kind: "scalar", T: 9, opt: true }
    ]);
    var ConnectRoom2 = class _ConnectRoom extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ConnectRoom().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ConnectRoom().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ConnectRoom().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_ConnectRoom, a, b);
      }
    };
    exports.ConnectRoom = ConnectRoom2;
    ConnectRoom2.runtime = protobuf_1.proto2;
    ConnectRoom2.typeName = "ConnectRoom";
    ConnectRoom2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "roomId", kind: "scalar", T: 9 }
    ]);
    var CreateTransport2 = class _CreateTransport extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _CreateTransport().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _CreateTransport().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _CreateTransport().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_CreateTransport, a, b);
      }
    };
    exports.CreateTransport = CreateTransport2;
    CreateTransport2.runtime = protobuf_1.proto2;
    CreateTransport2.typeName = "CreateTransport";
    CreateTransport2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "sctpCapabilities", kind: "message", T: sctp_capabilities_pb_js_1.ProtoSctpCapabilities },
      { no: 2, name: "transportType", kind: "scalar", T: 9 }
    ]);
    var ConnectTransport2 = class _ConnectTransport extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ConnectTransport().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ConnectTransport().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ConnectTransport().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_ConnectTransport, a, b);
      }
    };
    exports.ConnectTransport = ConnectTransport2;
    ConnectTransport2.runtime = protobuf_1.proto2;
    ConnectTransport2.typeName = "ConnectTransport";
    ConnectTransport2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "transportType", kind: "scalar", T: 9 },
      { no: 2, name: "dtlsParameters", kind: "message", T: sdp_info_pb_js_1.ProtoDtlsParameters }
    ]);
    var CreateDataConsumer2 = class _CreateDataConsumer extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _CreateDataConsumer().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _CreateDataConsumer().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _CreateDataConsumer().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_CreateDataConsumer, a, b);
      }
    };
    exports.CreateDataConsumer = CreateDataConsumer2;
    CreateDataConsumer2.runtime = protobuf_1.proto2;
    CreateDataConsumer2.typeName = "CreateDataConsumer";
    CreateDataConsumer2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "label", kind: "scalar", T: 9 }
    ]);
    var Produce2 = class _Produce extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _Produce().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _Produce().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _Produce().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_Produce, a, b);
      }
    };
    exports.Produce = Produce2;
    Produce2.runtime = protobuf_1.proto2;
    Produce2.typeName = "Produce";
    Produce2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "label", kind: "scalar", T: 9 },
      { no: 2, name: "kind", kind: "scalar", T: 9 },
      { no: 3, name: "rtpParameters", kind: "message", T: rtp_parameters_pb_js_1.ProtoRtpParameters },
      { no: 4, name: "paused", kind: "scalar", T: 8 },
      { no: 5, name: "appData", kind: "message", T: app_data_pb_js_1.AppData, opt: true }
    ]);
    var ProduceData2 = class _ProduceData extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ProduceData().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ProduceData().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ProduceData().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_ProduceData, a, b);
      }
    };
    exports.ProduceData = ProduceData2;
    ProduceData2.runtime = protobuf_1.proto2;
    ProduceData2.typeName = "ProduceData";
    ProduceData2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "transportId", kind: "scalar", T: 9 },
      { no: 2, name: "sctpStreamParameters", kind: "message", T: sctp_stream_parameters_pb_js_1.ProtoSctpStreamParameters },
      { no: 3, name: "label", kind: "scalar", T: 9 },
      { no: 4, name: "protocol", kind: "scalar", T: 9, opt: true },
      { no: 5, name: "appData", kind: "message", T: app_data_pb_js_1.AppData, opt: true }
    ]);
    var Consume2 = class _Consume extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _Consume().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _Consume().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _Consume().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_Consume, a, b);
      }
    };
    exports.Consume = Consume2;
    Consume2.runtime = protobuf_1.proto2;
    Consume2.typeName = "Consume";
    Consume2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "producerPeerId", kind: "scalar", T: 9 },
      { no: 2, name: "producerId", kind: "scalar", T: 9 },
      { no: 3, name: "appData", kind: "message", T: app_data_pb_js_1.AppData, opt: true }
    ]);
    var CloseProducer2 = class _CloseProducer extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _CloseProducer().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _CloseProducer().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _CloseProducer().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_CloseProducer, a, b);
      }
    };
    exports.CloseProducer = CloseProducer2;
    CloseProducer2.runtime = protobuf_1.proto2;
    CloseProducer2.typeName = "CloseProducer";
    CloseProducer2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "producerId", kind: "scalar", T: 9 }
    ]);
    var CloseConsumer2 = class _CloseConsumer extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _CloseConsumer().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _CloseConsumer().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _CloseConsumer().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_CloseConsumer, a, b);
      }
    };
    exports.CloseConsumer = CloseConsumer2;
    CloseConsumer2.runtime = protobuf_1.proto2;
    CloseConsumer2.typeName = "CloseConsumer";
    CloseConsumer2.fields = protobuf_1.proto2.util.newFieldList(() => []);
    var ResumeConsumer2 = class _ResumeConsumer extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ResumeConsumer().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ResumeConsumer().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ResumeConsumer().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_ResumeConsumer, a, b);
      }
    };
    exports.ResumeConsumer = ResumeConsumer2;
    ResumeConsumer2.runtime = protobuf_1.proto2;
    ResumeConsumer2.typeName = "ResumeConsumer";
    ResumeConsumer2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "consumerId", kind: "scalar", T: 9 },
      { no: 2, name: "producerPeerId", kind: "scalar", T: 9 }
    ]);
    var SyncMeetingState2 = class _SyncMeetingState extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _SyncMeetingState().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _SyncMeetingState().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _SyncMeetingState().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_SyncMeetingState, a, b);
      }
    };
    exports.SyncMeetingState = SyncMeetingState2;
    SyncMeetingState2.runtime = protobuf_1.proto2;
    SyncMeetingState2.typeName = "SyncMeetingState";
    SyncMeetingState2.fields = protobuf_1.proto2.util.newFieldList(() => []);
    var RestartTransportIce2 = class _RestartTransportIce extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _RestartTransportIce().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _RestartTransportIce().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _RestartTransportIce().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_RestartTransportIce, a, b);
      }
    };
    exports.RestartTransportIce = RestartTransportIce2;
    RestartTransportIce2.runtime = protobuf_1.proto2;
    RestartTransportIce2.typeName = "RestartTransportIce";
    RestartTransportIce2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "transportType", kind: "scalar", T: 9 },
      { no: 2, name: "transportId", kind: "scalar", T: 9 }
    ]);
    var SendData2 = class _SendData extends protobuf_1.Message {
      constructor(data) {
        super();
        this.to = [];
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _SendData().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _SendData().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _SendData().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_SendData, a, b);
      }
    };
    exports.SendData = SendData2;
    SendData2.runtime = protobuf_1.proto2;
    SendData2.typeName = "SendData";
    SendData2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "to", kind: "scalar", T: 9, repeated: true },
      { no: 2, name: "label", kind: "scalar", T: 9, opt: true },
      { no: 3, name: "payload", kind: "scalar", T: 9 }
    ]);
    var UpdateRoomControls2 = class _UpdateRoomControls extends protobuf_1.Message {
      constructor(data) {
        super();
        this.control = { case: void 0 };
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _UpdateRoomControls().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _UpdateRoomControls().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _UpdateRoomControls().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_UpdateRoomControls, a, b);
      }
    };
    exports.UpdateRoomControls = UpdateRoomControls2;
    UpdateRoomControls2.runtime = protobuf_1.proto2;
    UpdateRoomControls2.typeName = "UpdateRoomControls";
    UpdateRoomControls2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "room_control", kind: "message", T: room_control_pb_js_1.RoomControlType, oneof: "control" },
      { no: 2, name: "produce_sources_control", kind: "message", T: room_control_pb_js_1.ProduceSourcesControl, oneof: "control" }
    ]);
    var UpdatePeerPermission2 = class _UpdatePeerPermission extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _UpdatePeerPermission().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _UpdatePeerPermission().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _UpdatePeerPermission().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_UpdatePeerPermission, a, b);
      }
    };
    exports.UpdatePeerPermission = UpdatePeerPermission2;
    UpdatePeerPermission2.runtime = protobuf_1.proto2;
    UpdatePeerPermission2.typeName = "UpdatePeerPermission";
    UpdatePeerPermission2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "peerId", kind: "scalar", T: 9 },
      { no: 2, name: "permissions", kind: "message", T: permissions_pb_js_1.Permissions, opt: true }
    ]);
    var ActivateSpeakerNotification2 = class _ActivateSpeakerNotification extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _ActivateSpeakerNotification().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _ActivateSpeakerNotification().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _ActivateSpeakerNotification().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_ActivateSpeakerNotification, a, b);
      }
    };
    exports.ActivateSpeakerNotification = ActivateSpeakerNotification2;
    ActivateSpeakerNotification2.runtime = protobuf_1.proto2;
    ActivateSpeakerNotification2.typeName = "ActivateSpeakerNotification";
    ActivateSpeakerNotification2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "size", kind: "scalar", T: 5, opt: true }
    ]);
    var UpdatePeerRole2 = class _UpdatePeerRole extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _UpdatePeerRole().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _UpdatePeerRole().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _UpdatePeerRole().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_UpdatePeerRole, a, b);
      }
    };
    exports.UpdatePeerRole = UpdatePeerRole2;
    UpdatePeerRole2.runtime = protobuf_1.proto2;
    UpdatePeerRole2.typeName = "UpdatePeerRole";
    UpdatePeerRole2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "peerId", kind: "scalar", T: 9 },
      { no: 2, name: "role", kind: "scalar", T: 9 }
    ]);
    var UpdatePeerMetadata2 = class _UpdatePeerMetadata extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _UpdatePeerMetadata().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _UpdatePeerMetadata().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _UpdatePeerMetadata().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_UpdatePeerMetadata, a, b);
      }
    };
    exports.UpdatePeerMetadata = UpdatePeerMetadata2;
    UpdatePeerMetadata2.runtime = protobuf_1.proto2;
    UpdatePeerMetadata2.typeName = "UpdatePeerMetadata";
    UpdatePeerMetadata2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "peerId", kind: "scalar", T: 9 },
      { no: 2, name: "metadata", kind: "scalar", T: 9 }
    ]);
    var UpdateRoomMetadata2 = class _UpdateRoomMetadata extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _UpdateRoomMetadata().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _UpdateRoomMetadata().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _UpdateRoomMetadata().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_UpdateRoomMetadata, a, b);
      }
    };
    exports.UpdateRoomMetadata = UpdateRoomMetadata2;
    UpdateRoomMetadata2.runtime = protobuf_1.proto2;
    UpdateRoomMetadata2.typeName = "UpdateRoomMetadata";
    UpdateRoomMetadata2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "metadata", kind: "scalar", T: 9 }
    ]);
    var CloseStreamOfLabel2 = class _CloseStreamOfLabel extends protobuf_1.Message {
      constructor(data) {
        super();
        this.peerIds = [];
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _CloseStreamOfLabel().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _CloseStreamOfLabel().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _CloseStreamOfLabel().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_CloseStreamOfLabel, a, b);
      }
    };
    exports.CloseStreamOfLabel = CloseStreamOfLabel2;
    CloseStreamOfLabel2.runtime = protobuf_1.proto2;
    CloseStreamOfLabel2.typeName = "CloseStreamOfLabel";
    CloseStreamOfLabel2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "label", kind: "scalar", T: 9 },
      { no: 2, name: "peerIds", kind: "scalar", T: 9, repeated: true }
    ]);
    var AcceptLobbyPeer2 = class _AcceptLobbyPeer extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _AcceptLobbyPeer().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _AcceptLobbyPeer().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _AcceptLobbyPeer().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_AcceptLobbyPeer, a, b);
      }
    };
    exports.AcceptLobbyPeer = AcceptLobbyPeer2;
    AcceptLobbyPeer2.runtime = protobuf_1.proto2;
    AcceptLobbyPeer2.typeName = "AcceptLobbyPeer";
    AcceptLobbyPeer2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "peerId", kind: "scalar", T: 9 }
    ]);
    var DenyLobbyPeer2 = class _DenyLobbyPeer extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _DenyLobbyPeer().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _DenyLobbyPeer().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _DenyLobbyPeer().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_DenyLobbyPeer, a, b);
      }
    };
    exports.DenyLobbyPeer = DenyLobbyPeer2;
    DenyLobbyPeer2.runtime = protobuf_1.proto2;
    DenyLobbyPeer2.typeName = "DenyLobbyPeer";
    DenyLobbyPeer2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "peerId", kind: "scalar", T: 9 }
    ]);
    var KickPeer2 = class _KickPeer extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _KickPeer().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _KickPeer().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _KickPeer().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_KickPeer, a, b);
      }
    };
    exports.KickPeer = KickPeer2;
    KickPeer2.runtime = protobuf_1.proto2;
    KickPeer2.typeName = "KickPeer";
    KickPeer2.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 1, name: "peerId", kind: "scalar", T: 9 }
    ]);
    var CloseRoom2 = class _CloseRoom extends protobuf_1.Message {
      constructor(data) {
        super();
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _CloseRoom().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _CloseRoom().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _CloseRoom().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_CloseRoom, a, b);
      }
    };
    exports.CloseRoom = CloseRoom2;
    CloseRoom2.runtime = protobuf_1.proto2;
    CloseRoom2.typeName = "CloseRoom";
    CloseRoom2.fields = protobuf_1.proto2.util.newFieldList(() => []);
    var Request = class _Request extends protobuf_1.Message {
      constructor(data) {
        super();
        this.request = { case: void 0 };
        protobuf_1.proto2.util.initPartial(data, this);
      }
      static fromBinary(bytes, options) {
        return new _Request().fromBinary(bytes, options);
      }
      static fromJson(jsonValue, options) {
        return new _Request().fromJson(jsonValue, options);
      }
      static fromJsonString(jsonString, options) {
        return new _Request().fromJsonString(jsonString, options);
      }
      static equals(a, b) {
        return protobuf_1.proto2.util.equals(_Request, a, b);
      }
    };
    exports.Request = Request;
    Request.runtime = protobuf_1.proto2;
    Request.typeName = "Request";
    Request.fields = protobuf_1.proto2.util.newFieldList(() => [
      { no: 2, name: "connect_room", kind: "message", T: ConnectRoom2, oneof: "request" },
      { no: 3, name: "create_transport", kind: "message", T: CreateTransport2, oneof: "request" },
      { no: 4, name: "connect_transport", kind: "message", T: ConnectTransport2, oneof: "request" },
      { no: 25, name: "create_data_consumer", kind: "message", T: CreateDataConsumer2, oneof: "request" },
      { no: 5, name: "produce", kind: "message", T: Produce2, oneof: "request" },
      { no: 6, name: "produce_data", kind: "message", T: ProduceData2, oneof: "request" },
      { no: 7, name: "consume", kind: "message", T: Consume2, oneof: "request" },
      { no: 8, name: "close_producer", kind: "message", T: CloseProducer2, oneof: "request" },
      { no: 9, name: "close_consumer", kind: "message", T: CloseConsumer2, oneof: "request" },
      { no: 10, name: "resume_consumer", kind: "message", T: ResumeConsumer2, oneof: "request" },
      { no: 11, name: "sync_meeting_state", kind: "message", T: SyncMeetingState2, oneof: "request" },
      { no: 12, name: "restart_transport_ice", kind: "message", T: RestartTransportIce2, oneof: "request" },
      { no: 13, name: "send_data", kind: "message", T: SendData2, oneof: "request" },
      { no: 14, name: "update_room_controls", kind: "message", T: UpdateRoomControls2, oneof: "request" },
      { no: 15, name: "update_peer_permission", kind: "message", T: UpdatePeerPermission2, oneof: "request" },
      { no: 16, name: "activate_speaker_notification", kind: "message", T: ActivateSpeakerNotification2, oneof: "request" },
      { no: 17, name: "update_peer_role", kind: "message", T: UpdatePeerRole2, oneof: "request" },
      { no: 18, name: "update_peer_metadata", kind: "message", T: UpdatePeerMetadata2, oneof: "request" },
      { no: 19, name: "update_room_metadata", kind: "message", T: UpdateRoomMetadata2, oneof: "request" },
      { no: 20, name: "close_stream_of_label", kind: "message", T: CloseStreamOfLabel2, oneof: "request" },
      { no: 21, name: "accept_lobby_peer", kind: "message", T: AcceptLobbyPeer2, oneof: "request" },
      { no: 22, name: "deny_lobby_peer", kind: "message", T: DenyLobbyPeer2, oneof: "request" },
      { no: 23, name: "kick_peer", kind: "message", T: KickPeer2, oneof: "request" },
      { no: 24, name: "close_room", kind: "message", T: CloseRoom2, oneof: "request" }
    ]);
  }
});

// src/request.events.ts
var ProtoRequest = __toESM(require_request_pb(), 1);
var ProtoRequestEvent = {
  acceptLobbyPeer: ProtoRequest.AcceptLobbyPeer,
  activateSpeakerNotification: ProtoRequest.ActivateSpeakerNotification,
  createDataConsumer: ProtoRequest.CreateDataConsumer,
  closeConsumer: ProtoRequest.CloseConsumer,
  closeProducer: ProtoRequest.CloseProducer,
  closeRoom: ProtoRequest.CloseRoom,
  connectRoom: ProtoRequest.ConnectRoom,
  closeStreamOfLabel: ProtoRequest.CloseStreamOfLabel,
  connectTransport: ProtoRequest.ConnectTransport,
  consume: ProtoRequest.Consume,
  createTransport: ProtoRequest.CreateTransport,
  denyLobbyPeer: ProtoRequest.DenyLobbyPeer,
  kickPeer: ProtoRequest.KickPeer,
  produce: ProtoRequest.Produce,
  produceData: ProtoRequest.ProduceData,
  restartTransportIce: ProtoRequest.RestartTransportIce,
  resumeConsumer: ProtoRequest.ResumeConsumer,
  sendData: ProtoRequest.SendData,
  syncMeetingState: ProtoRequest.SyncMeetingState,
  updatePeerMetadata: ProtoRequest.UpdatePeerMetadata,
  updatePeerPermission: ProtoRequest.UpdatePeerPermission,
  updatePeerRole: ProtoRequest.UpdatePeerRole,
  updateRoomControls: ProtoRequest.UpdateRoomControls,
  updateRoomMetadata: ProtoRequest.UpdateRoomMetadata
};

export {
  require_sdp_info_pb,
  require_app_data_pb,
  require_sctp_stream_parameters_pb,
  require_permissions_pb,
  require_request_pb,
  ProtoRequestEvent
};
