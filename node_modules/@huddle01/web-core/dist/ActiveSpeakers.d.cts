import Bot from './Bot.cjs';
import { EnhancedEventEmitter } from './common-js/EnhancedEventEmitter.cjs';
import 'mediasoup-client/lib/DataConsumer';

type ActiveSpeakersEvent = {
    close: [];
};
type ActiveSpeakersOptions = {
    bot: Bot;
    size?: number;
};
/**
 * ActiveSpeakers class.
 * Functionality to get the active speakers in the room.
 */
declare class ActiveSpeakers extends EnhancedEventEmitter<ActiveSpeakersEvent> {
    /**
     * Instance of the ActiveSpeakers Class; used for singleton pattern.
     */
    private static __instance;
    /**
     * Get the instance of the ActiveSpeakers Class.
     * @returns ActiveSpeakers instance.
     */
    static getInstance(): ActiveSpeakers;
    /**
     * Create the instance of the ActiveSpeakers Class.
     * @returns ActiveSpeakers instance.
     */
    static createInstance(data: ActiveSpeakersOptions): ActiveSpeakers;
    /**
     * Room instance.
     */
    private __room;
    /**
     * Bot instance which has the data producer connected directly to the room bot.
     * This is used to handle all the states of the room and its functionality.
     */
    private __bot;
    /**
     * Is the notification active.
     */
    private __active;
    /**
     * Is the notification active.
     */
    get active(): boolean;
    /**
     * Maximum number of entries in the list.
     */
    private MAX_SIZE;
    /**
     * Size by which the active speakers list will be notified.
     * `note: default size is 8`
     */
    private __size;
    /**
     * Size by which the active speakers list will be notified.
     */
    get size(): number;
    /**
     * Array of ActiveSpeakers ordered by volume.
     */
    private __activePeerIds;
    /**
     * Update the number of peerIds to notify.
     * @param size
     */
    updateSize: (size: number) => void;
    /**
     * Handle all the events emitted by the bot.
     */
    private __handleBotEvents;
    private __handleClosingAllEvents;
    private __handleActiveSpeakerChange;
    private constructor();
}

export { ActiveSpeakersEvent, ActiveSpeakersOptions, ActiveSpeakers as default };
