import {
  useDevices
} from "../chunk-WOXYJ4TL.js";
import "../chunk-B6M254MV.js";
import "../chunk-IL7JOYA6.js";

// src/components/Audio.tsx
import { useEffect, useRef } from "react";
import { jsx } from "react/jsx-runtime";
var Audio = ({ stream, ...rest }) => {
  const audioElem = useRef(null);
  const { preferredDevice } = useDevices({ type: "speaker" });
  useEffect(() => {
    const audioRef = audioElem.current;
    if (stream && audioRef) {
      audioRef.load();
      audioRef.srcObject = stream;
    }
    if (audioRef && preferredDevice) {
      audioRef.setSinkId?.(preferredDevice.deviceId);
    }
    return () => {
      if (audioRef) {
        audioRef.srcObject = null;
      }
    };
  }, [audioElem.current, preferredDevice, stream]);
  return (
    // eslint-disable-next-line jsx-a11y/media-has-caption
    /* @__PURE__ */ jsx("audio", { autoPlay: true, playsInline: true, controls: false, ref: audioElem, ...rest })
  );
};

// src/components/Video.tsx
import { useEffect as useEffect2, useRef as useRef2 } from "react";
import { jsx as jsx2 } from "react/jsx-runtime";
var Video = ({ stream, ...rest }) => {
  const videoRef = useRef2(null);
  useEffect2(() => {
    const videoObj = videoRef.current;
    if (videoObj) {
      videoObj.srcObject = stream;
      videoObj.onloadedmetadata = async () => {
        try {
          await videoObj.play();
        } catch (error) {
          console.error(error);
        }
      };
      videoObj.onerror = () => {
        console.error("videoCard() | Error is hapenning...");
      };
    }
  }, []);
  return /* @__PURE__ */ jsx2("video", { ...rest, ref: videoRef, autoPlay: true, muted: true });
};
export {
  Audio,
  Video
};
//# sourceMappingURL=index.js.map