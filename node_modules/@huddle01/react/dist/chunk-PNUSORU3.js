import {
  useHuddle01_default
} from "./chunk-B6M254MV.js";

// src/hooks/useRoomControls.ts
import { useCallback, useEffect, useState } from "react";
var useRoomControls = (props) => {
  const { huddleClient } = useHuddle01_default();
  const room = huddleClient.room;
  const [roomControls, setRoomControls] = useState(
    room.config
  );
  const handleRoomClose = useCallback(
    (data) => {
      if (props?.onRoomLeave)
        props.onRoomLeave(data);
    },
    [props?.onRoomLeave]
  );
  const handleRoomControlsUpdate = useCallback(() => {
    if (props?.onRoomControlsUpdated)
      props.onRoomControlsUpdated(room.config);
    setRoomControls(room.config);
  }, [props?.onRoomControlsUpdated]);
  useEffect(() => {
    room.once("room-closed", handleRoomClose);
    room.on("room-controls-updated", handleRoomControlsUpdate);
    return () => {
      room.off("room-closed", handleRoomClose);
      room.off("room-controls-updated", handleRoomControlsUpdate);
    };
  }, []);
  const updateControls = room.updateRoomControls;
  return {
    roomControls,
    updateControls
  };
};

export {
  useRoomControls
};
//# sourceMappingURL=chunk-PNUSORU3.js.map